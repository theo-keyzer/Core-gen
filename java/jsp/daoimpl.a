- Look at search flags to what also need to match

----------------------------------------------------------------
Actor main .
----------------------------------------------------------------

	All arg ins

----------------------------------------------------------------
Actor ins .
----------------------------------------------------------------
C package com.bp.hr.service.data.$CPNl.impl;
C
C import java.sql.Types;
C import java.util.List;
C import java.util.Date;
C import java.util.Calendar;
C import java.text.SimpleDateFormat;

Its attr import_lob

C
C import com.bp.hr.service.data.$CPNl.$CTNcDAO;
C import com.bp.hr.service.data.entity.$CPNl.$CTNc;
C import com.bp.hr.service.data.entity.$CPNl.$CTNcView;
C import com.bp.hr.service.data.rowmappers.$CPNl.$CTNcRowMapper;
C import com.bp.hr.service.data.rowmappers.$CPNl.$CTNcViewRowMapper;
C import com.bp.hr.service.data.util.DAOUtils;
C
C
C /**
C  * Database access layer
C  * 
C  * @author Theo.Keyzer
C  * 
C  */
C public class $CTNcDAOImpl extends DAOUtils implements $CTNcDAO
C {
C 	private static final long serialVersionUID = 1L;
C 	private static final String CREATE =  "Insert into BP_$CTNu (created_by, \

Its attr flds

C ) values (?, \

Its attr args

C )";

Its rel_attr del
Its rel_attr get
Its rel_attr update

C 	private static final String LIST = "Select * from BP_$CTNu ";
C 	private static final String VIEW = "Select * from BP_$CTNu_VIEW  ";
C 	private static final String SEARCH = "Select * from BP_$CTNu_VIEW where ACTIVE_IND = 'Y' ";
C 	private static final String DUP_CHECK = "Select * from BP_$CTNu_VIEW where ACTIVE_IND = ACTIVE_IND ";
C
C 	public int create$CTNc($CTNc $CTNl)
C 	{
C 		SimpleDateFormat sdf  = new SimpleDateFormat("yyyy/MM/dd");

Its attr create_lob
Its attr create_date
Its attr_select default

C 		getJdbcTemplate().update(CREATE
C 			, new Object[] {$CTNl.getCreatedBy(), \

Its attr create

C }
C 			, new int[] {Types.INTEGER,\

Its attr create_types

C });
C 		return(0);
C 	}
C
C 	public List<$CTNc> list$CTNc()
C 	{
C 		return getJdbcTemplate().query(LIST, new $CTNcRowMapper());
C 	}
C
C 	public List<$CTNcView> dupCheck$CTNc($CTNcView $CTNl, Long rowFrom, Long rowTo)
C 	{
C 		Long n;
C 		String s;
C 		String sql = DUP_CHECK;

Its rel_attr where_dup

C 		return getJdbcTemplate().query(sql, new $CTNcViewRowMapper());
C 	}
C
C 	public List<$CTNcView> search$CTNc($CTNcView $CTNl, Long rowFrom, Long rowTo)
C 	{
C 		Long n;
C 		String s;
C 		String sql = SEARCH;

Its rel_attr where
Its select_type BL_order

C 		return getJdbcTemplate().query(sql, new $CTNcViewRowMapper());
C 	}
C
C 	public List<$CTNcView> view$CTNc(String filter, Long id, String flags)
C 	{
C 		String s = "ACTIVE_IND = 'Y'";
C 		if(filter != null && filter.length() != 0) s = s + " and " + filter;
C 		if(id != null && id != 0) s = " pk_id = '" + id + "' or ( " + s + " )";
C 		return getJdbcTemplate().query(VIEW + " where " + s + " " + flags, new $CTNcViewRowMapper());
C 	}
C

Its rel_attr func

C 	
C 	public static Date parseDate(String dateValue, SimpleDateFormat sdf) {
C 		
C 		Date newDate = null;
C 		
C 		if (dateValue != null) 
C 		{
C 			try 
C 			{
C 				newDate = sdf.parse(dateValue);
C 			} 
C 			catch (Exception pe) 
C 			{
C 			}
C 		}
C 		return newDate;
C 	}
C }

----------------------------------------------------------------
Actor default . code = Y
----------------------------------------------------------------

C 		if( $CTNl.get$CANc() == null || $CTNl.get$CANc().equals("") ) $CTNl.set$CANc( "Y" );

----------------------------------------------------------------
Actor default . code = N
----------------------------------------------------------------

C 		if( $CTNl.get$CANc() == null || $CTNl.get$CANc().equals("") ) $CTNl.set$CANc( "N" );

----------------------------------------------------------------
Actor BL_order . code = ORDER
----------------------------------------------------------------

C 		sql = sql + " order by ACTIVE_STATUS\

Its attr_select order_BL

C ";

----------------------------------------------------------------
Actor order_BL . code = ORDER_BY
----------------------------------------------------------------

C , $CANu\

----------------------------------------------------------------
Actor where_dup . relation = pk
----------------------------------------------------------------

C 		n = $CTNl.get$CANc();
C 		if(n != null && (n != 0) ) sql = sql + "and $CANu != '" + n + "' ";

- update check duplicated

----------------------------------------------------------------
Actor where_dup . relation = dropdown
----------------------------------------------------------------

C 		n = $CTNl.get$CANc();
C 		if(n != null && (n != 0) ) sql = sql + "and $CANu = '" + n + "' ";

----------------------------------------------------------------
Actor where_dup . relation = select
----------------------------------------------------------------

C 		s = $CTNl.get$CANc();
C 		if(s != null && (!s.equals(""))  ) sql = sql + "and $CANu = '" + s + "' ";

----------------------------------------------------------------
Actor where_dup . relation = lookup
----------------------------------------------------------------

C 		s = $CTNl.get$FTNc();
C 		if(s != null && (!s.equals("")) ) sql = sql + "and $FTNu $FWO '" + s + "' ";
C 		s = $CTNl.get$CANc();
C 		if(s != null && (!s.equals("")) ) sql = sql + "and $CANu $FWO '" + s + "' ";

----------------------------------------------------------------
Actor where_dup . relation = view
----------------------------------------------------------------


----------------------------------------------------------------
Actor where_dup . relation = viewed
----------------------------------------------------------------


----------------------------------------------------------------
Actor where_dup . relation in none,name
----------------------------------------------------------------

Du where_none_dup Mytype = VARCHAR2

Actor where_none_dup

C 		s = $CTNl.get$CANc();
C 		if(s != null && (!s.equals("")) ) sql = sql + "and UPPER($CANu) = UPPER('" + s + "') ";

----------------------------------------------------------------
Actor where . relation = pk
----------------------------------------------------------------

C 		n = $CTNl.get$CANc();
C 		if(n != null && (n != 0) ) sql = sql + "and $CANu = '" + n + "' ";

----------------------------------------------------------------
Actor where . relation = dropdown
----------------------------------------------------------------

C 		n = $CTNl.get$CANc();
C 		if(n != null && (n != 0) ) sql = sql + "and $CANu = '" + n + "' ";

----------------------------------------------------------------
Actor where . relation = select
----------------------------------------------------------------

C 		s = $CTNl.get$CANc();
C 		if(s != null && (!s.equals(""))  ) sql = sql + "and $CANu = '" + s + "' ";

----------------------------------------------------------------
Actor where . relation = lookup
----------------------------------------------------------------

C 		s = $CTNl.get$FTNc();
C 		if(s != null && (!s.equals("")) ) sql = sql + "and $FTNu $FWO '" + s + "' ";
C 		s = $CTNl.get$CANc();
C 		if(s != null && (!s.equals("")) ) sql = sql + "and $CANu $FWO '" + s + "' ";

----------------------------------------------------------------
Actor where . relation = view
----------------------------------------------------------------

C 		s = $CTNl.get$CANc();
C 		if(s != null && (!s.equals("")) ) sql = sql + "and UPPER($CANu) like UPPER('" + s + "%') ";

-C 		if(s != null && (!s.equals("")) ) sql = sql + "and UPPER($CANu) $FWO UPPER('" + s + "') ";

----------------------------------------------------------------
Actor where . relation = viewed
----------------------------------------------------------------

C 		n = $CTNl.get$CANc();
C 		if(n != null && (n != 0) ) sql = sql + "and $CANu = '" + n + "' ";

----------------------------------------------------------------
Actor where . relation in none,name
----------------------------------------------------------------

Du where_none Mytype = VARCHAR2

Actor where_none

C 		s = $CTNl.get$CANc();
C 		if(s != null && (!s.equals("")) ) sql = sql + "and UPPER($CANu) = UPPER('" + s + "') ";

----------------------------------------------------------------
Actor where . relation = where
----------------------------------------------------------------

Du where_where

Its select BL

-C 		s = $CTNl.get$CANc();
C //		if(s != null && (!s.equals("")) ) sql = sql + "and $FWVu $FWO '" + s + "' ";

Actor where_where . Mytype = VARCHAR2
C 		s = $CTNl.get$CANc();

Actor where_where . Mytype = DATE
C 		s = $CTNl.get$CANcFld();

Actor where_where . Mytype = NUMBER
C 		n = $CTNl.get$CANc();

----------------------------------------------------------------
Actor BL . code = DRV_DOC
----------------------------------------------------------------

C 		if(n != null && (n != 0) )
C 		{ 
C 			String man = $CTNl.getSysEmplId();
C 			if(man == null) man = "";
C 			sql = sql + " and (CREATED_BY = '" + n + "' or MANAGER_ID = '" + man + "' ";
C 			sql = sql + " or location_id in (select lr.location_id from bp_location_role lr, bp_role r where";
C 			sql = sql + " lr.user_id = '" + n + "' and r.id = lr.role_id and r.role_name = 'SINGLE POINT OF AUTHORITY')";
C 			sql = sql + " or '" + n + "' in (select user_id from bp_empl_role er, bp_role r where r.id = er.role_id and r.role_name = 'ROAD SAFETY ADVISOR') )";
C 
C 		}

End where

----------------------------------------------------------------
Actor BL . code = TRAINING_DOC
----------------------------------------------------------------

C 		if(n != null && (n != 0) )
C 		{ 
C 			String man = $CTNl.getSysEmplId();
C 			if(man == null) man = "";
C 			sql = sql + " and ( MANAGER_ID = '" + man + "' ";
C 			sql = sql + " or location_id in (select lr.location_id from bp_location_role lr, bp_role r where";
C 			sql = sql + " lr.user_id = '" + n + "' and r.id = lr.role_id and r.role_name = 'TRAINING COORDINATOR') ) ";
C 
C 		}

End where

----------------------------------------------------------------
Actor BL . code = WELLNESS_DOC
----------------------------------------------------------------

C 		if(n != null && (n != 0) )
C 		{ 
C 			sql = sql + " and ( location_id in (select lr.location_id from bp_location_role lr, bp_role r where";
C 			sql = sql + " lr.user_id = '" + n + "' and r.id = lr.role_id and r.role_name = 'WELLNESS ADVISOR')  ";
C 			sql = sql + " or  location_id in (select lr.location_id from bp_location_role lr, bp_role r where";
C 			sql = sql + " lr.user_id = '" + n + "' and r.id = lr.role_id and r.role_name = 'COMPANY DR') ) ";
C 
C 		}

End where

----------------------------------------------------------------
Actor BL . code = TRAINING_DOC2
----------------------------------------------------------------

End where

----------------------------------------------------------------
Actor BL . code = WELLNESS_DOC2
----------------------------------------------------------------

End where

----------------------------------------------------------------
Actor BL . code = DRV_DOC2
----------------------------------------------------------------

End where

----------------------------------------------------------------
Actor BL . code = ENG_DOC
----------------------------------------------------------------

End where

----------------------------------------------------------------
Actor name . relation = name
----------------------------------------------------------------

C , String $CANl\

----------------------------------------------------------------
Actor func . relation = pk
----------------------------------------------------------------

C 	public $CTNc read$CTNc(\

Du var    Mytype = VARCHAR2
Du number Mytype = NUMBER

C $CANl)
C 	{
C 		List<$CTNc> list =  getJdbcTemplate().query(READ, new Object[]{$CANl}, new $CTNcRowMapper());
C 		if(list != null && list.size() > 0)
C 		{
C 			return list.get(0);
C 		}
C 		return null;
C 	}
C
C 	public int update$CTNc($CTNc $CTNl)
C 	{
C 		SimpleDateFormat sdf  = new SimpleDateFormat("yyyy/MM/dd");

Its attr create_date
Its attr_select default

C 		Long newUpdateCnt = $CTNl.getUpdateCnt() + 1;
C 		return( getJdbcTemplate().update(UPDATE, new Object[]{ new Date(), $CTNl.getModifiedBy(), newUpdateCnt\

Its attr upd2

C , $CTNl.get$CANc(), $CTNl.getUpdateCnt()}));
C 	}
C
C 	public int delete$CTNc($CTNc $CTNl)
C 	{
C 		Long newUpdateCnt = $CTNl.getUpdateCnt() + 1;
C 		return( getJdbcTemplate().update(DELETE, new Object[] { new Date(), $CTNl.getModifiedBy(), newUpdateCnt, $CTNl.get$CANc(), $CTNl.getUpdateCnt()}));
C 	}

Actor var
C String \
Actor number
C Long \

----------------------------------------------------------------
Actor create_date . Mytype = DATE
----------------------------------------------------------------

C 		$CTNl.set$CANc( parseDate( $CTNl.get$CANcFld(), sdf ) );

----------------------------------------------------------------
Actor import_lob . Mytype = BLOB
----------------------------------------------------------------

C import org.springframework.jdbc.core.support.SqlLobValue;
C import org.springframework.jdbc.support.lob.LobHandler;
C import org.springframework.jdbc.support.lob.DefaultLobHandler;

----------------------------------------------------------------
Actor create_lob . Mytype = BLOB
----------------------------------------------------------------

C 		LobHandler lobHandler = new DefaultLobHandler();  // reusable object

----------------------------------------------------------------
Actor create . Mytype = BLOB
----------------------------------------------------------------

C $, new SqlLobValue($CTNl.get$CANc(), lobHandler)\

----------------------------------------------------------------
Actor create . Mytype != BLOB
----------------------------------------------------------------

C $, $CTNl.get$CANc()\

----------------------------------------------------------------
Actor create_types . Mytype = BLOB
----------------------------------------------------------------

C $, Types.BLOB\

----------------------------------------------------------------
Actor create_types . Mytype = VARCHAR2
----------------------------------------------------------------

C $, Types.VARCHAR\

----------------------------------------------------------------
Actor create_types . Mytype = TEXT
----------------------------------------------------------------

C $, Types.VARCHAR\

----------------------------------------------------------------
Actor create_types . Mytype = CHAR
----------------------------------------------------------------

C $, Types.VARCHAR\

----------------------------------------------------------------
Actor create_types . Mytype = DATE
----------------------------------------------------------------

C $, Types.DATE\

----------------------------------------------------------------
Actor create_types . Mytype = NUMBER
----------------------------------------------------------------

C $, Types.INTEGER\

----------------------------------------------------------------
Actor create_types . Mytype = FLOAT
----------------------------------------------------------------

C $, Types.FLOAT\

----------------------------------------------------------------
Actor del . relation = pk
----------------------------------------------------------------

C 	private static final String DELETE = "Update BP_$CTNu set ACTIVE_IND = 'N', DATE_MODIFIED = ?, MODIFIED_BY = ?, UPDATE_CNT = ? where $CAN = ? and UPDATE_CNT = ?";

----------------------------------------------------------------
Actor get . relation = pk
----------------------------------------------------------------

C 	private static final String READ = "Select * from BP_$CTNu where $CAN = ?";

----------------------------------------------------------------
Actor update . relation = pk
----------------------------------------------------------------

C 	private static final String UPDATE = "Update BP_$CTNu set ACTIVE_IND = 'Y', DATE_MODIFIED = ?, MODIFIED_BY = ?, UPDATE_CNT = ?\

Its attr upd

C  where $CAN = ? and UPDATE_CNT = ?";

----------------------------------------------------------------
Actor upd . Mytype != BLOB
----------------------------------------------------------------

C , $CAN = ?\

----------------------------------------------------------------
Actor upd2 . Mytype != BLOB
----------------------------------------------------------------

C , $CTNl.get$CANc()\

----------------------------------------------------------------
Actor flds .
----------------------------------------------------------------

C $, $CAN\

----------------------------------------------------------------
Actor args .
----------------------------------------------------------------

C $, ?\

