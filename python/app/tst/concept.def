----------------------------------------------------------------
Concept intro
----------------------------------------------------------------

Topic . 1 h1 Introduction

T . A start.

----------------------------------------------------------------
Concept actor
----------------------------------------------------------------

Topic . 1 h2 Actors

T . The actor node has a list of commands to run.
T . It uses a data node or object passed.

Topic var 2 p Actor variables.

T . The actor match has access to the same variables as the commands in the actor has.

Topic flow 2 p Actor flow.

T . Multiple actors of the same name can match, and the Break command stops any further matches.

Topic cmd 2 p Actor commands.

T . The Du, All, Its, This and That commands call other actors.

Topic run 2 p Actor function.

T . The go_act function in the run-time engine processes the actor call.
T . It calls the go_cmds function to process the command list.

Topic gen 2 p Actor generated.

T . The generated code for the actors is the loader and data classes.
T . No runtime code is generated for this.

----------------------------------------------------------------
Concept cmd
----------------------------------------------------------------

Topic . 1 h2 The Commands

T . The command nodes.

Topic gen 2 p Command generated.

T . The generated code for the cmds is the loader and data classes.
T . No runtime code is generated for this.

Topic cmd 2 p Actor commands.

T . The commands has access to the variables and functions in the node object of the actor.

----------------------------------------------------------------
Concept node
----------------------------------------------------------------

Topic . 1 h2 Data Nodes

T . The data nodes.

Topic var 2 p Node variables.

T . The variables are the node items.
T . Or node items related via a path.

Topic var 2 p Node commands.

T . The Its command gets other related nodes via a path.

Topic run 2 p Node functions.

T . The get_var function in the generated code get the values for the varaiables.
T . The do_its function there calls the go_act function with a related node.

Topic gen 2 p Node generated.

T . The generated code for the nodes is the loader, data classes and run-time functions.

Topic flow 2 p Node flow.

T . The code in the nodes can chain to other node functions.
T . A path is passed for the route.
T . The returned code can end loops.

----------------------------------------------------------------
Concept options
----------------------------------------------------------------

Topic . 1 h2 Node options

T . Command node options is specified like Add.me.break.
T . This is separated to the Add token and a list with the rest.
T . Data node options is the same.

Topic cmd 2 p Option commands.

T . The command is Its options.

Topic var 2 p Option variables.

T . The variable name is options.

----------------------------------------------------------------
Concept collections
----------------------------------------------------------------

Topic . 1 h2 Collection Nodes

T . The collection nodes.
T . Any data can be added here.
T . It has a dict for var, set and list.
T . The Add command can also add to the current node (me), or to a path to a node (node).

Topic cmd 2 p Collection commands.

T . They are Add, Clear, Check and This.
T . The This command is also path driven like the Its command.
T . The This command uses the var, set and list as starting point whereas the Its command uses the current node to start.

Topic cmd 2 p Collection areas.

T . They are var, list, set, node and me to specify where to add.

Topic cmd 2 p Collection options.

T . They are me, node, json, eval to specify what to add. It defaults to the string provided.
T . The break is to break out of the actor loop for duplicates.
T . Its also sets a break flag for the Break command to use for advanced breaks.

Topic var 2 p Collection variables.

T . For debugging, ._list.D, ._set.D
T . For the var.D it is _.D
T . If the var is a data node, it works the same as the data node.
T . If the var is a dict, it is the dict items.
T . A dict var can have data nodes in it.
T . The path is then via the dict into the data node.

----------------------------------------------------------------
Concept json
----------------------------------------------------------------

Topic . 1 h2 Json Nodes

T . The json nodes is converted to python nodes.
T . The are dict, list and objects.

Topic cmd 2 p Json commands.

T . They are Add.json, That json

Topic var 2 p Json variables.

T . The variables are the dict items.
T . Or nested dict items via a path.



