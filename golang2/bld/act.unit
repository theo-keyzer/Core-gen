----------------------------------------------------------------
Comp Actor parent . Find
----------------------------------------------------------------
* Loader definition for actors.
* These are like routines the generator calls
* for generating code.
* Actors group on name
----------------------------------------------------------------

	Element name   C1 NAME  * of actor
	Element comp   C1 COMP  * what it belongs to
	Element attr   C1 WORD  * what to check
	Element eq     C1 WORD  * to equal
	Element value  V1 WORD  * this
-	Element cc     V1 WORD  * code to generate.

----------------------------------------------------------------
Comp All parent Actor
----------------------------------------------------------------
* An actor calling type.
* For each component call this actor.
* The match is for the component.
----------------------------------------------------------------

	Element what    C1 WORD    * what to look for
	Element actor   R1 ACTOR   * what actor to run for it
-	Element attr    C1 WORD    * what to check
-	Element eq      C1 WORD    * to equal
-	Element value   C1 WORD    * this
	Element args    V1 WORD    * arg data value

Ref actor Actor check

----------------------------------------------------------------
Comp Du parent Actor
----------------------------------------------------------------
* An actor calling type.
* Coditional call to actor
----------------------------------------------------------------

	Element actor  R1 ACTOR * what actor to run for it
-	Element attr   C1 WORD  * what to check
-	Element eq     C1 WORD  * to equal
-	Element value  C1 WORD  * this
	Element args   V1 WORD  * arg data value
	
Ref actor Actor check

----------------------------------------------------------------
Comp New parent Actor
----------------------------------------------------------------
* Create new comp and add
----------------------------------------------------------------

	Element where  C1 WORD  * add to dats or acts
	Element what   C1 WORD  * what comp to load
	Element line   V1 WORD  * load line args
	
----------------------------------------------------------------
Comp Refs parent Actor
----------------------------------------------------------------
* Re run refs after loading new defs
----------------------------------------------------------------

	Element where  C1 WORD  * ref of dats or acts

----------------------------------------------------------------
Comp Var parent Actor
----------------------------------------------------------------
* Set variable to value
----------------------------------------------------------------

	Element attr   C1 WORD  * variable name
	Element eq     C1 WORD  * to equal
	Element value  V1 WORD  * this

----------------------------------------------------------------
Comp Its parent Actor
----------------------------------------------------------------
* Call this actor
* For each child or reference of this def
* The match is for the component.
* Its what actor . . . args - to bypass the match
----------------------------------------------------------------

	Element what    C1 WORD      * to look for
	Element actor   R1 ACTOR     * what to do
-	Element attr    C1 WORD      * what to check
-	Element eq      C1 WORD      * to equal
-	Element value   C1 WORD      * this
	Element args    V1 WORD      * arg data value
	
Ref actor Actor check
	
----------------------------------------------------------------
Comp C parent Actor
----------------------------------------------------------------
* Output code to file.
----------------------------------------------------------------

	Element desc   V1 DESC * code to output.

----------------------------------------------------------------
Comp Cs parent Actor
----------------------------------------------------------------
* Output code sniplet to file - no newline
----------------------------------------------------------------

	Element desc   V1 DESC * code to output.

----------------------------------------------------------------
Comp Out parent Actor
----------------------------------------------------------------
* Output control
* delay: output is off until first C in next actor
* normal: back to normal
* off: cascade all output  off
----------------------------------------------------------------

	Element what   C1 WORD      * to look for
	Element pad    C1 WORD      * to look for
	Element desc   V1 DESC * code to buffer.

----------------------------------------------------------------
Comp In parent Actor
----------------------------------------------------------------
* Redirect output to the ins variable.
----------------------------------------------------------------

	Element flag   C1 WORD * set on or off

----------------------------------------------------------------
Comp Break parent Actor
----------------------------------------------------------------
* Break out of actor loop
* To not do the default one
----------------------------------------------------------------

	Element what   C1      WORD * what to break
		Opt    actor        * continue with calling actor - break actor case.
		Opt    loop         * continue after calling All, Its cmd - break loop chain.
		Opt    cmds         * continue with actor case - break cmd list.
	Element pad    C1 WORD      * padding (of)
	Element actor  C1 ACTOR     * which actor to break
	Element check  C1 WORD      * only if not unique

----------------------------------------------------------------
Comp Add parent Actor
----------------------------------------------------------------
* Append to the collection map or node path.
* The path for the collect is _.
* The path for the current node is .
* The default is to the string data.
* Options are:
* me to add the current node.
* node to add a node from a path
* json to add a converted json node.
* map to add a map.
* list to add a list.
* clear to clear the map or list
* check to not add dups
* break on dups
* no_add to only check
----------------------------------------------------------------
	
	Element path     C1 WORD * node path where to add
	Element data     V1 WORD * data to add

----------------------------------------------------------------
Comp This parent Actor
----------------------------------------------------------------
* Call this actor
* For each child or item in the collection
----------------------------------------------------------------

	Element path    C1 WORD      * node path
	Element actor   R1 ACTOR     * what to do
	Element args    V1 WORD      * arg data value
	
Ref actor Actor check

----------------------------------------------------------------
Comp Replace parent Actor
----------------------------------------------------------------
* Replace string.
* Replace _:D with abc match cba
----------------------------------------------------------------
	
	Element path     C1 WORD * node path where to add
	Element pad      C1 WORD * padding (with)
	Element with     C1 WORD * what to replace with
	Element pad2     C1 WORD * padding (match)
	Element match    V1 WORD * string match pattern



