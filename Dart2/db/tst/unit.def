----------------------------------------------------------------
Concept Concept
----------------------------------------------------------------

Topic bld 1 h1 Concept

T . Loader definition for actors.
T . These are like routines the generator calls
T . for generating code.
T . Actors group on name

Topic bld 2 p Concept variables.

T . name: name of concept

Topic bld 2 p Child nodes.

T . Topic: Loader definition for actors.

----------------------------------------------------------------
Concept Topic
----------------------------------------------------------------

Topic bld 1 h1 Topic

T . Loader definition for actors.
T . These are like routines the generator calls
T . for generating code.
T . Actors group on name

Topic bld 2 p Topic variables.

T . name: topic name
T . level: index tree level
T . tag: html or formating tag
T . desc: doc to output.

Topic bld 2 p Child nodes.

T . T: Loader definition for actors.
T . See: Loader definition for actors.

----------------------------------------------------------------
Concept T
----------------------------------------------------------------

Topic bld 1 h1 T

T . Loader definition for actors.
T . These are like routines the generator calls
T . for generating code.
T . Actors group on name

Topic bld 2 p T variables.

T . file: optional file to include
T . desc: doc to output.

----------------------------------------------------------------
Concept See
----------------------------------------------------------------

Topic bld 1 h1 See

T . Loader definition for actors.
T . These are like routines the generator calls
T . for generating code.
T . Actors group on name

Topic bld 2 p See variables.

T . concept: Ref to concept

----------------------------------------------------------------
Concept Actor
----------------------------------------------------------------

Topic bld 1 h1 Actor

T . Loader definition for actors.
T . These are like routines the generator calls
T . for generating code.
T . Actors group on name

Topic bld 2 p Actor variables.

T . name: of actor
T . comp: what it belongs to
T . attr: what to check
T . eq: to equal
T . value: this

Topic bld 2 p Child nodes.

T . All: An actor calling type.
T . Du: An actor calling type.
T . New: Create new comp and add
T . Refs: Re run refs after loading new defs
T . Var: Set variable to value
T . Its: Call this actor
T . C: Output code to file.
T . Cs: Output code sniplet to file - no newline
T . Out: Output control
T . In: Redirect output to the ins variable.
T . Break: Break out of actor loop
T . Add: Append to the collection map or node path.
T . This: Call this actor
T . Replace: Replace string.
T . Dbconn: connect to database
T . Http: Append http data to the collection map or node path.

----------------------------------------------------------------
Concept All
----------------------------------------------------------------

Topic bld 1 h1 All

T . An actor calling type.
T . For each component call this actor.
T . The match is for the component.

Topic bld 2 p All variables.

T . what: what to look for
T . actor: what actor to run for it
T . args: arg data value

----------------------------------------------------------------
Concept Du
----------------------------------------------------------------

Topic bld 1 h1 Du

T . An actor calling type.
T . Coditional call to actor

Topic bld 2 p Du variables.

T . actor: what actor to run for it
T . args: arg data value

----------------------------------------------------------------
Concept New
----------------------------------------------------------------

Topic bld 1 h1 New

T . Create new comp and add

Topic bld 2 p New variables.

T . where: add to dats or acts
T . what: what comp to load
T . line: load line args

----------------------------------------------------------------
Concept Refs
----------------------------------------------------------------

Topic bld 1 h1 Refs

T . Re run refs after loading new defs

Topic bld 2 p Refs variables.

T . where: ref of dats or acts

----------------------------------------------------------------
Concept Var
----------------------------------------------------------------

Topic bld 1 h1 Var

T . Set variable to value

Topic bld 2 p Var variables.

T . attr: variable name
T . eq: to equal
T . value: this

----------------------------------------------------------------
Concept Its
----------------------------------------------------------------

Topic bld 1 h1 Its

T . Call this actor
T . For each child or reference of this def
T . The match is for the component.
T . Its what actor . . . args - to bypass the match

Topic bld 2 p Its variables.

T . what: to look for
T . actor: what to do
T . args: arg data value

----------------------------------------------------------------
Concept C
----------------------------------------------------------------

Topic bld 1 h1 C

T . Output code to file.

Topic bld 2 p C variables.

T . desc: code to output.

----------------------------------------------------------------
Concept Cs
----------------------------------------------------------------

Topic bld 1 h1 Cs

T . Output code sniplet to file - no newline

Topic bld 2 p Cs variables.

T . desc: code to output.

----------------------------------------------------------------
Concept Out
----------------------------------------------------------------

Topic bld 1 h1 Out

T . Output control
T . delay: output is off until first C in next actor
T . normal: back to normal
T . off: cascade all output  off

Topic bld 2 p Out variables.

T . what: to look for
T . pad: to look for
T . desc: code to buffer.

----------------------------------------------------------------
Concept In
----------------------------------------------------------------

Topic bld 1 h1 In

T . Redirect output to the ins variable.

Topic bld 2 p In variables.

T . flag: set on or off

----------------------------------------------------------------
Concept Break
----------------------------------------------------------------

Topic bld 1 h1 Break

T . Break out of actor loop
T . To not do the default one

Topic bld 2 p Break variables.

T . what: what to break
T . pad: padding (of)
T . actor: which actor to break
T . check: only if not unique

----------------------------------------------------------------
Concept Add
----------------------------------------------------------------

Topic bld 1 h1 Add

T . Append to the collection map or node path.
T . The path for the collect is _.
T . The path for the current node is .
T . The default is to the string data.
T . Options are:
T . me to add the current node.
T . node to add a node from a path
T . json to add a converted json node.
T . map to add a map.
T . list to add a list.
T . clear to clear the map or list
T . check to not add dups
T . break on dups
T . no_add to only check

Topic bld 2 p Add variables.

T . path: node path where to add
T . data: data to add

----------------------------------------------------------------
Concept This
----------------------------------------------------------------

Topic bld 1 h1 This

T . Call this actor
T . For each child or item in the collection

Topic bld 2 p This variables.

T . path: node path
T . actor: what to do
T . args: arg data value

----------------------------------------------------------------
Concept Replace
----------------------------------------------------------------

Topic bld 1 h1 Replace

T . Replace string.
T . Replace _:D with abc match cba

Topic bld 2 p Replace variables.

T . path: node path where to add
T . pad: padding (with)
T . with: what to replace with
T . pad2: padding (match)
T . match: string match pattern

----------------------------------------------------------------
Concept Dbconn
----------------------------------------------------------------

Topic bld 1 h1 Dbconn

T . connect to database

Topic bld 2 p Dbconn variables.

T . host: 
T . database: 
T . username: 
T . password: 

----------------------------------------------------------------
Concept Http
----------------------------------------------------------------

Topic bld 1 h1 Http

T . Append http data to the collection map or node path.

Topic bld 2 p Http variables.

T . path: node path where to add
T . data: http url
T . body: http body

----------------------------------------------------------------
Concept Comp
----------------------------------------------------------------

Topic bld 1 h1 Comp

T . Loader definition for defining components.

Topic bld 2 p Comp variables.

T . name: of component.
T . nop: ignored.
T . parent: its parent.
T . find: if need to be found.
T . doc: documentation string

Topic bld 2 p Child nodes.

T . Element: Loader definition for defining component's elements.
T . Ref: Relation of element to comp
T . Ref2: Relation of element to comp and child of comp
T . Ref3: Relation of element to comp and child of comp
T . Refq: Relation of element to comp and child of comp
T . Refu: Copy of element to comp and child of comp
T . Join: Add refs for this join

----------------------------------------------------------------
Concept Element
----------------------------------------------------------------

Topic bld 1 h1 Element

T . Loader definition for defining component's elements.

Topic bld 2 p Element variables.

T . name: of element
T . mw: storage type
T . mw2: data type - not used.
T . pad: separator.
T . doc: documentation string.

Topic bld 2 p Child nodes.

T . Opt: Select options for element.

----------------------------------------------------------------
Concept Opt
----------------------------------------------------------------

Topic bld 1 h1 Opt

T . Select options for element.
T . Add meaning to documentation

Topic bld 2 p Opt variables.

T . name: name of value option
T . pad: separator
T . doc: documentation string

----------------------------------------------------------------
Concept Ref
----------------------------------------------------------------

Topic bld 1 h1 Ref

T . Relation of element to comp
T . For the R1, link to a comp.
T . For the L1, link to local element (same parent).

Topic bld 2 p Ref variables.

T . element: element name of link to local element
T . comp: comp name it links to
T . opt: optional or check - error if not found
T . var: not used
T . doc: doc string

----------------------------------------------------------------
Concept Ref2
----------------------------------------------------------------

Topic bld 1 h1 Ref2

T . Relation of element to comp and child of comp
T . It starts with the (element2 field), which references a component.
T . That component is then used as the parent to find the child (element field) component.
T . Finally, it stores the reference id in the (element field)'s ref.

Topic bld 2 p Ref2 variables.

T . element: element name to use to find a comp in the remote parent.
T . comp: comp name it links to.
T . element2: element name to use for for the link for remote parent
T . opt: optional or check - error if not found
T . var: not used
T . doc: doc string

----------------------------------------------------------------
Concept Ref3
----------------------------------------------------------------

Topic bld 1 h1 Ref3

T . Relation of element to comp and child of comp
T . It starts with the (element2 field), which references a component.
T . The (element3 field) in that component, references another component.
T . That component is then used as the parent to find the child (element field) component.
T . Finally, it stores the reference id in the (element field)'s ref.

Topic bld 2 p Ref3 variables.

T . element: element name to use to find a comp in the remote parent.
T . comp: comp name it links to.
T . element2: element name to use for the link to remote comp.
T . comp_ref: comp name it links to.
T . element3: element name to use to find the remote element in, use its link for the remote parent.
T . opt: optional or check - error if not found
T . var: not used
T . doc: doc string

----------------------------------------------------------------
Concept Refq
----------------------------------------------------------------

Topic bld 1 h1 Refq

T . Relation of element to comp and child of comp

Topic bld 2 p Refq variables.

T . element: element name to use to find a comp in the remote parent.
T . comp: comp name it links to.
T . element2: element name to use to find its parent element in, use its link for the remote parent.
T . comp_ref: parent's Comp
T . opt: optional or check - error if not found
T . var: not used
T . doc: doc string

----------------------------------------------------------------
Concept Refu
----------------------------------------------------------------

Topic bld 1 h1 Refu

T . Copy of element to comp and child of comp

Topic bld 2 p Refu variables.

T . element: element name to use to copy remote link..
T . comp: comp name it links to.
T . element2: element name to use for the link to remote comp.
T . comp_ref: comp name it links to.
T . element3: element name to use to find the remote element in, use its link
T . opt: optional or check - error if not found
T . var: not used
T . doc: doc string

----------------------------------------------------------------
Concept Join
----------------------------------------------------------------

Topic bld 1 h1 Join

T . Add refs for this join

Topic bld 2 p Join variables.

T . element: 
T . dir: 
T . comp: 
T . using: 
T . element2: 
T . comp2: 
T . element3: 

