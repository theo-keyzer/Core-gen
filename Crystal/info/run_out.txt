note.act

notes - map of note taking app

  1) E_O_L - 
  2) purpose - use cases
    A idea - list of ideas
    A design - some designs 
    A todo - todo items
    A info - data collected
    A model - build models
    A story - story follows a thought pattern
    A pattern - need to guide the navigation through the model to create a story
    A store - store pattern in new model
    A model - need to overlap models to describe an idea
    A repeat - information can be repeated
  2) mapping - how to join
    A idea - union of info, knowledge, skill
    A wisdom - how to act of the idea
    A thinking - moving between the frame grids
    A memory - the path and result of the thinking
    A learning - create new models by adding, reorder and refactoring other models
    A design - how to get from a to b
  2) usage - how to use it
    A capture - collect new data for models
    A match - find correlations and missing links
    A simulate - what the app needs to do
    A doc - describe the process
  2) docs - making documentation
    A find - find relavant information in a document
    A order - order of doument
    A flow - detail need to flow together
    A files - bulk of data can be in separate files
    A pandoc - convert markdown to latex for these files
    A join - process can join these files
    A subset - needed subset of the document can be generated
    A index - the model is like a document index

model - new model

  1) E_O_L - 
  2) input - input data
    A keywords - multiple values
    A models - from the models
  2) map - join
    A find - find keywords in the given models
    A link - find the links between them
  2) output - 
    A diagram - diagram of the result
    A nest - limit nesting depth
    A layout - options to choose

match - map how to match

  1) E_O_L - 
  2) input - list of model names
    A find - find the a's of these names
    A join - join with the ref to other models
    A end - end if all the models are reached, print maps.
  2) navigate - navigate the map
    A each - for each a, move to next grid
    A join - join that grid a's to other models
    A get - get shortest path to get to all the models
    A print - print path, maps
  1) E_O_L - 
  2) gen - generate matching app
    A build - build actors to test use cases
    A eval - looks like its working
    A design - design app
    A gen - generate app
    A E_O_L - 

join - map how to join

  1) E_O_L - 
  2) find - the a of the items found
    A its - follow its ref
    A ref - the ref can be either to a model or a frame
    A explore - that frame or model can be explore to get to the other item, or follow its a's refs
    A frame - move up to its frame and explore its ref and its a's ref
    A expand - move around in the model with up,down,left
    A group - items a related in some way within a group

design - notes app

  1) E_O_L - 
  2) parts - needed
    A database - some form of graph database
    A schema - the model schema
    A queries - translate navigation into database queries
    A capture - way to import, merge and capture data

schema - notes app

  1) E_O_L - 
  2) formats - schema formats
    A links - the way links work
    A group - how groups work
m.act
m2.act
m3.act
m4.act
m5.act
m6.act
m7.act
m8.act
m9.act
m10.act
m11.act
m12.act note.def pos idea
m12.act note.def idea pos
m13.act note.def info pad
m14 note.def thinking idea pos

Model notes - map of note taking app

 Frame 2 purpose - use cases

  A idea * list of ideas

 Frame 2 mapping - how to join

  A idea * union of info, knowledge, skill
  A thinking * moving between the frame grids
m15.act note.def,map.def design,a1a pos,b1a
m16.act note.def,map.def idea,thinking,design

Model notes - map of note taking app

 Frame 2 purpose - use cases

  A idea * list of ideas
  A design * some designs 

 Frame 2 mapping - how to join

  A idea * union of info, knowledge, skill
  A thinking * moving between the frame grids
  A design * how to get from a to b

Model match - map how to match

 Frame 2 gen - generate matching app

  A design * design app
m17.act note.def,map.def idea,thinking,desig

Model notes - map of note taking app

 Frame 2 purpose - use cases

  A idea * list of ideas
  A design * some designs 
  A model * need to overlap models to describe an idea

 Frame 2 mapping - how to join

  A wisdom * how to act of the idea
  A memory * the path and result of the thinking

Model match - map how to match

 Frame 2 gen - generate matching app

  A design * design app
m18.act note.def

Model notes - map of note taking app

 Frame 2 purpose - use cases

  A design * some designs 
  A model * build models
  A model * need to overlap models to describe an idea

 Frame 2 usage - how to use it

  A match * find correlations and missing links

 Frame 2 docs - making documentation

  A join * process can join these files

 Frame 2 mapping - how to join

  A design * how to get from a to b

Model match - map how to match

 Frame 2 input - list of model names

  A join * join with the ref to other models

 Frame 2 navigate - navigate the map

  A join * join that grid a's to other models

 Frame 2 gen - generate matching app

  A design * design app

Model design - notes app

 Frame 2 parts - needed

  A schema * the model schema
grid.act grid.def
section
subsection
subsubsection
item 
item 
item 
subsubsection
item 
subsection
subsubsection
item 
section
subsection
col1 a
col2 b
col3 c
col3 d
col2 e
col3 f
col1 g
col2 h
col_center e
col_left a
col_left_right b
col_left_right e
col_up b
col_up_right c
col_up_right d
m19.act note.def todo,ref
   notes - map of note taking app  > 1-notes  1
   {
      - todo : todo items
     design - notes app  > 2-design  1
     {
       notes - map of note taking app  > 3-notes  1
       {
          - todo : todo items
       }
       match - map how to match  > 3-match  3
       schema - notes app  > 3-schema  1
     }
     model - new model  > 2-model  2
     match - map how to match  > 2-match  5
     {
       join - map how to join  > 3-join  1
       {
          - ref : the ref can be either to a model or a frame
       }
       design - notes app  > 3-design  3
     }
     join - map how to join  > 2-join  6
     {
        - ref : the ref can be either to a model or a frame
     }
   }
   model - new model  > 1-model  2
   {
     notes - map of note taking app  > 2-notes  1
     {
        - todo : todo items
       model - new model  > 3-model  2
     }
   }
   match - map how to match  > 1-match  3
   join - map how to join  > 1-join  4
   {
      - ref : the ref can be either to a model or a frame
   }
   design - notes app  > 1-design  5
   {
     schema - notes app  > 2-schema  1
   }
   schema - notes app  > 1-schema  6
m20.act note.def todo,ref
----------------------------------------------------------------
Model generated - with m20.act note.def todo,ref
----------------------------------------------------------------

  Frame 1 notes 0 map of note taking app
      A todo 2 todo items
    Frame 2 design 4 notes app
      Frame 3 notes 0 map of note taking app
          A todo 2 todo items
    Frame 2 match 2 map how to match
      Frame 3 join 3 map how to join
          A ref 48 the ref can be either to a model or a frame
    Frame 2 join 3 map how to join
        A ref 48 the ref can be either to a model or a frame
  Frame 1 model 1 new model
    Frame 2 notes 0 map of note taking app
        A todo 2 todo items
  Frame 1 join 3 map how to join
      A ref 48 the ref can be either to a model or a frame
m21.act note.def,generated.def
  generated
    notes
      - todo
      match
        join
          - ref
m22.act note.def todo,ref
  gene
    notes : map of note taking app
      - todo : todo items
      match : map how to match
        join : map how to join
          - ref : the ref can be either to a model or a frame
m23.act map.def a1,q z,y,z
----------------------------------------------------------------
Model gen1 - model from map.def with a1,q
----------------------------------------------------------------

  Frame 1 top - map of top
    A q : q
  Frame 1 a1 - map of grid 1
    Frame 2 a1a - map of grid 1.1
      A a1 : up to a1
----------------------------------------------------------------
Model gen2 - model from map.def,gen1 with a1,q
----------------------------------------------------------------

  Frame 1 gen1 - new generated model
    A q : q
    A a1 : up to a1
    Frame 2 a1 - map of grid 1
      Frame 3 a1a - map of grid 1.1
        A y : y
        A a1 : up to a1
  Frame 1 top - map of top
    A q : q
    Frame 2 b1 - map of grid 3
      Frame 3 top - map of top
        Frame 4 a2 - map of grid 2
          A z : z
m24.act note.def,map.def
notes 6 0
model 0 2
match 3 1
join 0 3
design 1 3
schema 0 1
top 2 2
a1 1 1
a1a 1 1
a2 0 1
b1 1 1
b2 1 0

notes 6 0
match 3 1
top 2 2
design 1 3
a1 1 1
a1a 1 1
b1 1 1
b2 1 0
model 0 2
join 0 3
schema 0 1
a2 0 1
latex.act gen.def
load.act: note.def,note.unit
Insert into "model" ("name", "pad", "info") values ( "notes",  "-",  "map of note taking app")
Insert into "model" ("name", "pad", "info") values ( "model",  "-",  "new model")
Insert into "model" ("name", "pad", "info") values ( "match",  "-",  "map how to match")
Insert into "model" ("name", "pad", "info") values ( "join",  "-",  "map how to join")
Insert into "model" ("name", "pad", "info") values ( "design",  "-",  "notes app")
Insert into "model" ("name", "pad", "info") values ( "schema",  "-",  "notes app")
