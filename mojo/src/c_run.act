----------------------------------------------------------------
Actor main .
----------------------------------------------------------------

C import structs
C 
C from inputs import Input
C
C fn load(inout act: structs.ActT, inout ff: Input, tok: String, ln: Int):

All Comp load

C
C fn refs(inout act: structs.ActT):

All Comp refs

----------------------------------------------------------------
Actor load . parent.name = Actor
----------------------------------------------------------------

C         if tok == "${name}c":
C             var kp = structs.Kp${name}c(ff, ln, act)
C             act.ap_${name}l.push_back(kp)
C             var cmd = structs.CmdT("${name}c", kp.me)
C             act.ap_cmds.push_back(cmd)

Break

----------------------------------------------------------------
Actor load .
----------------------------------------------------------------

C         if tok == "${name}c":
C             var kp = structs.Kp${name}c(ff, ln, act)
C             act.ap_${name}l.push_back(kp)

----------------------------------------------------------------
Actor refs .
----------------------------------------------------------------

Out delay

C     for i in range( len(act.ap_${name}l) ):
		
Its Element refs_ele

C

----------------------------------------------------------------
Actor refs_ele . mw = F1
----------------------------------------------------------------

C         try:
C             var p = act.names["${parent.name}c_" + String(i) + "_${name}l" ]
C             act.ap_${parent.name}l[i].k_${name}lp = act.index[String(act.ap_${parent.name}l[i].parentp) + "_${Ref_element.comp.name}c_" + p]
C         except:
C             print("except " + "${parent.name}c_" + String(i) + "_${name}l" + " : " + String(act.ap_${parent.name}l[i].parentp) + "_${Ref_element.comp.name}c_"  )

----------------------------------------------------------------
Actor refs_ele . mw = R1
----------------------------------------------------------------

C         try:
C             var p = act.names["${parent.name}c_" + String(i) + "_${name}l" ]
C             act.ap_${parent.name}l[i].k_${name}lp = act.index["${Ref_element.comp.name}c_" + p]
C         except:
C             print("except ${parent.name}c_" + String(i) + "_${name}l ${Ref_element.comp.name}c_"  )


